взяти визначення РМв1;

зовнішня дія sqlite_mavka_extension_open(path: адреса<char>, path_size: size_t): адреса;

дія нативна_дія_open(обʼєкт_нативної_дії: адреса<РМв1::Обʼєкт>, Р: адреса<РМв1::Розширення>, обʼєкт_я: адреса<РМв1::Обʼєкт>, кількість_аргументів: позитивне, аргументи: памʼять<адреса<РМв1::Обʼєкт>>, іменовані_аргументи: адреса<РМв1::ІменованіАргументи>, дані: адреса): РМв1::Результат {
  змінна ціль знайдено_аргумент_шлях = ні;
  змінна ціль аргумент_шлях: адреса<РМв1::Обʼєкт> = пусто;
  якщо іменовані_аргументи != пусто {
    знайдено_аргумент_шлях = РМв1::знайти_іменований_аргумент(Р, іменовані_аргументи, РМв1::назва_з_Ю8(Р, ю8"шлях"), аргумент_шлях::адреса);
  }
  якщо кількість_аргументів > 0 {
    якщо знайдено_аргумент_шлях == ні {
      знайдено_аргумент_шлях = так;
      аргумент_шлях = аргументи[0];
    }
  }
  якщо знайдено_аргумент_шлях == ні {
    вернути РМв1::падіння(Р, РМв1::створити_текст_з_Ю8(Р, ю8"Пропущено аргумент \"шлях\""));
  }
  якщо РМв1::перевірити_чи_обʼєкт_є_юнікодом(аргумент_шлях, Р) == ні {
    вернути РМв1::падіння(Р, РМв1::створити_текст_з_Ю8(Р, ю8"Аргумент \"шлях\" має бути юнікодом"));
  }
  РМв1::зберегти_обʼєкт(Р, аргумент_шлях);
  ціль шлях_Ю8: памʼять<п8> = пусто;
  ціль розмір_шляху_Ю8 = РМв1::отримати_копію_даних_юнікоду_як_Ю8(аргумент_шлях, Р, шлях_Ю8::адреса);
  ціль sqlite_db = sqlite_mavka_extension_open(шлях_Ю8 як адреса<char>, size_t(розмір_шляху_Ю8));
  якщо sqlite_db == пусто {
    вернути РМв1::успіх(Р, пусто);
  }
  вернути РМв1::успіх(Р, РМв1::створити_адресу(Р, sqlite_db));
}

зовнішня дія завантажити_РМв1(Р: адреса<РМв1::Розширення>): РМв1::Результат {
  ціль обʼєкт_модуля_sqlite = РМв1::створити_модуль(Р, РМв1::назва_з_Ю8(Р, ю8"sqlite"));
  РМв1::зберегти_обʼєкт(Р, обʼєкт_модуля_sqlite);
  ціль обʼєкт_нативної_дії_open = РМв1::створити_нативну_дію(Р, РМв1::назва_з_Ю8(Р, ю8"open"), нативна_дія_open, пусто, пусто);
  РМв1::обʼєкт_змінити_властивість(обʼєкт_модуля_sqlite, Р, РМв1::назва_з_Ю8(Р, ю8"open"), обʼєкт_нативної_дії_open);
  РМв1::видалити_збережений_обʼєкт(Р);
  вернути РМв1::успіх(Р, обʼєкт_модуля_sqlite);
}